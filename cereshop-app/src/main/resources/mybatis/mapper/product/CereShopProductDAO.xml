<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.cereshop.app.dao.product.CereShopProductDAO">
  <resultMap id="BaseResultMap" type="com.shop.cereshop.commons.domain.product.CereShopProduct">
    <id column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_brief" jdbcType="VARCHAR" property="productBrief" />
    <result column="shop_group_id" jdbcType="BIGINT" property="shopGroupId" />
    <result column="classify_id" jdbcType="BIGINT" property="classifyId" />
    <result column="supplier_id" jdbcType="BIGINT" property="supplierId" />
    <result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
    <result column="if_logistics" jdbcType="BIT" property="ifLogistics" />
    <result column="shelve_state" jdbcType="BIT" property="shelveState" />
    <result column="if_oversold" jdbcType="BIT" property="ifOversold" />
    <result column="fictitious_number" jdbcType="INTEGER" property="fictitiousNumber" />
    <result column="reject" jdbcType="VARCHAR" property="reject" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.shop.cereshop.commons.domain.product.CereShopProduct">
    <result column="product_text" jdbcType="LONGVARCHAR" property="productText" />
  </resultMap>
  <sql id="Base_Column_List">
    product_id, shop_id, product_name, product_brief, shop_group_id, classify_id, supplier_id,
    supplier_name, if_logistics, shelve_state, if_oversold,fictitious_number, create_time, update_time,product_text,reject
  </sql>
  <sql id="Blob_Column_List">
    product_text
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cere_shop_product
    where product_id = #{productId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cere_shop_product
    where product_id = #{productId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="product_id" keyProperty="productId" parameterType="com.shop.cereshop.commons.domain.product.CereShopProduct" useGeneratedKeys="true">
    insert into cere_shop_product (shop_id, product_name, product_brief,
                                   shop_group_id, classify_id, supplier_id,
                                   supplier_name, if_logistics, shelve_state,
                                   if_oversold,fictitious_number, create_time, update_time,
                                   product_text,reject)
    values (#{shopId,jdbcType=BIGINT}, #{productName,jdbcType=VARCHAR}, #{productBrief,jdbcType=VARCHAR},
            #{shopGroupId,jdbcType=BIGINT}, #{classifyId,jdbcType=BIGINT}, #{supplierId,jdbcType=BIGINT},
            #{supplierName,jdbcType=VARCHAR}, #{ifLogistics,jdbcType=BIT}, #{shelveState,jdbcType=BIT},
            #{ifOversold,jdbcType=BIT},#{fictitiousNumber,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR},
            #{productText,jdbcType=LONGVARCHAR},#{reject,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="product_id" keyProperty="productId" parameterType="com.shop.cereshop.commons.domain.product.CereShopProduct" useGeneratedKeys="true">
    insert into cere_shop_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="productName != null and productName!=''">
        product_name,
      </if>
      <if test="productBrief != null and productBrief!=''">
        product_brief,
      </if>
      <if test="shopGroupId != null">
        shop_group_id,
      </if>
      <if test="classifyId != null">
        classify_id,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="supplierName != null and supplierName!=''">
        supplier_name,
      </if>
      <if test="ifLogistics != null">
        if_logistics,
      </if>
      <if test="shelveState != null">
        shelve_state,
      </if>
      <if test="ifOversold != null">
        if_oversold,
      </if>
      <if test="fictitiousNumber != null">
        fictitious_number,
      </if>
      <if test="reject != null">
        reject,
      </if>
      <if test="createTime != null and createTime!=''">
        create_time,
      </if>
      <if test="updateTime != null and updateTime!=''">
        update_time,
      </if>
      <if test="productText != null">
        product_text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="productName != null and productName!=''">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productBrief != null and productBrief!=''">
        #{productBrief,jdbcType=VARCHAR},
      </if>
      <if test="shopGroupId != null">
        #{shopGroupId,jdbcType=BIGINT},
      </if>
      <if test="classifyId != null">
        #{classifyId,jdbcType=BIGINT},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="supplierName != null and supplierName!=''">
        #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="ifLogistics != null">
        #{ifLogistics,jdbcType=BIT},
      </if>
      <if test="shelveState != null">
        #{shelveState,jdbcType=BIT},
      </if>
      <if test="ifOversold != null">
        #{ifOversold,jdbcType=BIT},
      </if>
      <if test="fictitiousNumber != null">
        #{fictitiousNumber,jdbcType=INTEGER},
      </if>
      <if test="reject != null">
        #{reject,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null and createTime!=''">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null and updateTime!=''">
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="productText != null">
        #{productText,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shop.cereshop.commons.domain.product.CereShopProduct">
    update cere_shop_product
    <set>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=BIGINT},
      </if>
      <if test="productName != null and productName!=''">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productBrief != null and productBrief!=''">
        product_brief = #{productBrief,jdbcType=VARCHAR},
      </if>
      <if test="shopGroupId != null">
        shop_group_id = #{shopGroupId,jdbcType=BIGINT},
      </if>
      <if test="classifyId != null">
        classify_id = #{classifyId,jdbcType=BIGINT},
      </if>
      <if test="supplierId != null">
        supplier_id = #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="supplierName != null and supplierName!=''">
        supplier_name = #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="ifLogistics != null">
        if_logistics = #{ifLogistics,jdbcType=BIT},
      </if>
      <if test="shelveState != null">
        shelve_state = #{shelveState,jdbcType=BIT},
      </if>
      <if test="ifOversold != null">
        if_oversold = #{ifOversold,jdbcType=BIT},
      </if>
      <if test="fictitiousNumber != null">
        fictitious_number = #{fictitiousNumber,jdbcType=INTEGER},
      </if>
      <if test="reject != null">
        reject = #{reject,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null and createTime!=''">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null and updateTime!=''">
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="productText != null">
        product_text = #{productText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where product_id = #{productId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.shop.cereshop.commons.domain.product.CereShopProduct">
    update cere_shop_product
    set shop_id = #{shopId,jdbcType=BIGINT},
        product_name = #{productName,jdbcType=VARCHAR},
        product_brief = #{productBrief,jdbcType=VARCHAR},
        shop_group_id = #{shopGroupId,jdbcType=BIGINT},
        classify_id = #{classifyId,jdbcType=BIGINT},
        supplier_id = #{supplierId,jdbcType=BIGINT},
        supplier_name = #{supplierName,jdbcType=VARCHAR},
        if_logistics = #{ifLogistics,jdbcType=BIT},
        shelve_state = #{shelveState,jdbcType=BIT},
        if_oversold = #{ifOversold,jdbcType=BIT},
        fictitious_number = #{fictitiousNumber,jdbcType=INTEGER},
        reject = #{reject,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=VARCHAR},
        product_text = #{productText,jdbcType=LONGVARCHAR}
    where product_id = #{productId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shop.cereshop.commons.domain.product.CereShopProduct">
    update cere_shop_product
    set shop_id = #{shopId,jdbcType=BIGINT},
        product_name = #{productName,jdbcType=VARCHAR},
        product_brief = #{productBrief,jdbcType=VARCHAR},
        shop_group_id = #{shopGroupId,jdbcType=BIGINT},
        classify_id = #{classifyId,jdbcType=BIGINT},
        supplier_id = #{supplierId,jdbcType=BIGINT},
        supplier_name = #{supplierName,jdbcType=VARCHAR},
        if_logistics = #{ifLogistics,jdbcType=BIT},
        shelve_state = #{shelveState,jdbcType=BIT},
        if_oversold = #{ifOversold,jdbcType=BIT},
        fictitious_number = #{fictitiousNumber,jdbcType=INTEGER},
        reject = #{reject,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=VARCHAR}
    where product_id = #{productId,jdbcType=BIGINT}
  </update>

  <select id="findBySkuId" parameterType="java.lang.Object" resultType="com.shop.cereshop.app.page.product.ProductDetail">
    SELECT
      a.shop_id,
      a.product_id,
      a.product_name,
      a.product_text text,
      a.shelve_state,
      a.if_huabei,
      b.original_price,
      c.shop_name,
      c.shop_logo,
      a.product_brief,
      a.classify_id,
      m.shop_group_work_id,
      n.shop_seckill_id,
      h.shop_discount_id,
      g.users,
      x.number,
      if(m.shop_group_work_id, 1,
         if(psec.platform_seckill_id, 4,
            if(pdis.platform_discount_id, 5,
               if(n.shop_seckill_id, 2,
                  if(h.shop_discount_id, 3, 0))))) activityType,
      b.price,
      psec.platform_seckill_id,
	  pdis.platform_discount_id
    from cere_shop_product a
    LEFT JOIN cere_product_sku b ON a.product_id=b.product_id
    LEFT JOIN cere_platform_shop c ON a.shop_id=c.shop_id
    LEFT JOIN (SELECT a.shop_group_work_id,a.sku_id,a.price FROM cere_shop_group_work_detail a
    INNER JOIN (SELECT shop_group_work_id FROM cere_shop_group_work where state in (0,1) and shop_id=#{shopId} ORDER BY start_time LIMIT 1) b
    ON a.shop_group_work_id=b.shop_group_work_id) m ON b.sku_id=m.sku_id
    LEFT JOIN (SELECT a.shop_seckill_id,a.sku_id,a.number,a.total,a.seckill_price FROM cere_shop_seckill_detail a
    INNER JOIN (SELECT shop_seckill_id FROM cere_shop_seckill where state in (0,1) and shop_id=#{shopId} ORDER BY effective_start LIMIT 1) b
    ON a.shop_seckill_id=b.shop_seckill_id) n ON b.sku_id=n.sku_id
    LEFT JOIN (SELECT a.shop_discount_id,a.sku_id,a.number,a.total,a.price FROM cere_shop_discount_detail a
    INNER JOIN (SELECT shop_discount_id FROM cere_shop_discount where state in (0,1) and shop_id=#{shopId} ORDER BY start_time LIMIT 1) b
    ON a.shop_discount_id=b.shop_discount_id) h ON b.sku_id=h.sku_id
    LEFT JOIN (SELECT COUNT(a.buyer_user_id) users,a.product_id FROM (SELECT b.buyer_user_id,a.product_id FROM cere_order_product a,cere_shop_order b
    where a.order_id=b.order_id and b.state in (2,3,4) GROUP BY a.product_id,b.buyer_user_id) a GROUP BY a.product_id) g ON a.product_id=g.product_id
    LEFT JOIN (SELECT SUM(a.number) number,a.product_id from cere_order_product a
    LEFT JOIN cere_shop_order b ON a.order_id=b.order_id
    where a.sku_id=#{skuId} and b.state in (2,3,4)) x ON a.product_id=x.product_id
    LEFT JOIN (select seckill_id as platform_seckill_id, d.product_id from cere_platform_seckill b
        join cere_activity_sign c on c.activity_id = b.seckill_id and c.sign_type = 2 and c.state = 1 and b.state in (2,3)
        and b.sign_end_time <![CDATA[ <= ]]> now() and now() <![CDATA[ <= ]]> b.end_time
        join cere_sign_product d on d.sign_id = c.sign_id) psec on psec.product_id = a.product_id
    LEFT JOIN (select discount_id as platform_discount_id, d.product_id from cere_platform_discount b
        join cere_activity_sign c on c.activity_id = b.discount_id and c.sign_type = 3 and c.state = 1 and b.state in (2,3)
        and b.sign_end_time <![CDATA[ <= ]]> now() and now() <![CDATA[ <= ]]> b.end_time
        join cere_sign_product d on d.sign_id = c.sign_id) pdis on pdis.product_id = a.product_id
    where b.sku_id=#{skuId}
    GROUP BY b.sku_id
  </select>

  <select id="findImages" parameterType="java.lang.Object" resultType="java.lang.Object">
    SELECT product_image from cere_product_image
    where product_id=#{productId}
  </select>

  <select id="findSkuImages" parameterType="java.lang.Object" resultType="java.lang.Object">
    SELECT a.image from cere_sku_name a
    LEFT JOIN cere_product_sku b ON a.sku_id=b.sku_id
    where b.product_id=#{productId} and a.image IS NOT NULL and a.image <![CDATA[!= ]]>''
  </select>

  <select id="findClassifyNumber" parameterType="java.lang.Object" resultType="java.lang.Object">
    SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(b.classify_level_hierarchy,'/',-1),'/',1) from cere_shop_product a
    LEFT JOIN cere_product_classify b ON a.classify_id=b.classify_id
    where a.shop_id=#{shopId}
    GROUP BY replace(SUBSTRING_INDEX(b.classify_level_hierarchy,'/',2),'/','')
  </select>

  <select id="findPayNumber" parameterType="java.lang.Object" resultType="java.lang.Integer">
    SELECT SUM(a.number) from cere_order_product a
    LEFT JOIN cere_shop_order b ON a.order_id=b.order_id
    where a.sku_id=#{skuId} and b.state in (2,3,4)
  </select>

  <select id="getSearchProducts" parameterType="com.shop.cereshop.app.param.index.SearchParam" resultType="com.shop.cereshop.app.page.index.Product">
    SELECT a.shop_id,d.shop_name,a.product_id,a.product_name,c.product_image image,
        b.sku_id,
        b.original_price,
        b.price,
        0 as activityType
    from cere_shop_product a
    LEFT JOIN (SELECT a.product_id,a.price,a.sku_id,a.original_price from cere_product_sku a,cere_shop_product b
        where a.product_id=b.product_id GROUP BY a.product_id) b ON a.product_id=b.product_id
    LEFT JOIN (SELECT a.product_id,a.product_image from cere_product_image a,cere_shop_product b
        where a.product_id=b.product_id GROUP BY a.product_id) c ON a.product_id=c.product_id
    LEFT JOIN cere_platform_shop d ON a.shop_id=d.shop_id
    LEFT JOIN (SELECT SUM(number) number,sku_id,order_id from cere_order_product GROUP BY sku_id) f ON b.sku_id=f.sku_id
    where a.shelve_state=1 and d.state=1
    <if test="search!=null and search!=''">
      and a.product_name like concat('%',#{search},'%')
    </if>
    <if test="minMoney!=null">
      and b.price&gt;=#{minMoney}
    </if>
    <if test="maxMoney!=null">
      and b.price&lt;=#{maxMoney}
    </if>
    ORDER BY
    <if test='type=="1"'>
      price,
    </if>
    <if test='type=="2"'>
      price DESC,
    </if>
    <if test='volume=="1"'>
      f.number,
    </if>
    <if test='volume=="2"'>
      f.number DESC,
    </if>
    a.update_time DESC,a.create_time DESC
  </select>

  <select id="findShareProduct" parameterType="java.lang.Object" resultType="com.shop.cereshop.app.page.product.ShareProduct">
    SELECT a.product_id,a.sku_id,a.price,a.weight,a.SKU,d.product_name,
    GROUP_CONCAT(b.sku_value) value,c.product_image image from cere_product_sku a
    LEFT JOIN cere_sku_name b ON a.sku_id=b.sku_id
    LEFT JOIN (SELECT a.product_id,a.product_image from cere_product_image a,cere_shop_product b
    where a.product_id=b.product_id GROUP BY a.product_id) c ON a.product_id=c.product_id
    LEFT JOIN cere_shop_product d ON a.product_id=d.product_id
    where a.sku_id=#{skuId}
  </select>

  <select id="getCanvasProducts" parameterType="com.shop.cereshop.app.param.canvas.CanvasAppProductParam" resultType="com.shop.cereshop.app.page.canvas.CanvasProduct">
    SELECT a.shop_id,d.shop_name,d.shop_logo,a.product_id,a.product_name,x.users,
    IF(h.image IS NULL OR h.image='',c.product_image,h.image) image,
    b.price,b.sku_id,b.original_price,IF(f.number IS NULL,0,f.number) number,b.stock_number from cere_shop_product a
    LEFT JOIN (SELECT a.product_id,a.price,a.sku_id,a.original_price,a.stock_number from cere_product_sku a,cere_shop_product b
    where a.product_id=b.product_id GROUP BY a.product_id) b ON a.product_id=b.product_id
    LEFT JOIN (SELECT a.product_id,a.product_image from cere_product_image a,cere_shop_product b
    where a.product_id=b.product_id GROUP BY a.product_id) c ON a.product_id=c.product_id
    LEFT JOIN cere_platform_shop d ON a.shop_id=d.shop_id
    LEFT JOIN cere_product_classify e ON a.classify_id=e.classify_id
    LEFT JOIN (SELECT SUM(number) number,sku_id,order_id from cere_order_product GROUP BY sku_id) f ON b.sku_id=f.sku_id
    LEFT JOIN cere_shop_order g ON f.order_id=g.order_id and g.state in (2,3,4)
    LEFT JOIN (SELECT a.sku_id,a.image from cere_sku_name a,cere_product_sku b where a.sku_id=b.sku_id LIMIT 1) h ON b.sku_id=h.sku_id
    LEFT JOIN (SELECT COUNT(a.buyer_user_id) users,a.product_id FROM (SELECT b.buyer_user_id,a.product_id FROM cere_order_product a,cere_shop_order b
    where a.order_id=b.order_id and b.state in (2,3,4) GROUP BY a.product_id,b.buyer_user_id) a GROUP BY a.product_id) x ON a.product_id=x.product_id
    where a.shelve_state=1 and d.state=1
    <if test="search!=null and search!=''">
      and (d.shop_name like concat('%',#{search},'%') OR
      a.product_id like concat('%',#{search},'%') OR
      a.product_name like concat('%',#{search},'%'))
    </if>
    <if test="shelveState!=null">
      and a.shelve_state=#{shelveState}
    </if>
    <if test="classifyId!=null">
      and (a.classify_id=#{classifyId} OR e.classify_level_hierarchy like concat('%/',#{classifyId},'%'))
    </if>
    <if test="ids!=null and ids.size()>0">
      and a.product_id in (
      <foreach collection="ids" item="id" index="index" separator=",">
        #{id}
      </foreach>
      )
    </if>
    ORDER BY a.create_time DESC
  </select>

  <select id="getGroupWorkProducts" parameterType="com.shop.cereshop.app.param.canvas.CanvasAppProductParam" resultType="com.shop.cereshop.app.page.canvas.CanvasProduct">
    SELECT b.shop_id,d.shop_name,d.shop_logo,a.product_id,b.product_name,x.users,h.start_time,h.end_time,h.state,
    IF(m.image IS NULL OR m.image='',c.product_image,m.image) image,h.if_enable,h.enable_time,
    a.price,a.sku_id,n.price original_price,IF(f.number IS NULL,0,f.number) number,n.stock_number FROM cere_shop_group_work_detail a
    LEFT JOIN cere_shop_product b ON a.product_id=b.product_id
    LEFT JOIN (SELECT a.product_id,a.product_image from cere_product_image a,cere_shop_product b
    where a.product_id=b.product_id GROUP BY a.product_id) c ON a.product_id=c.product_id
    LEFT JOIN cere_platform_shop d ON b.shop_id=d.shop_id
    LEFT JOIN cere_product_classify e ON b.classify_id=e.classify_id
    LEFT JOIN (SELECT SUM(number) number,sku_id,order_id from cere_order_product GROUP BY sku_id) f ON a.sku_id=f.sku_id
    LEFT JOIN cere_shop_order g ON f.order_id=g.order_id and g.state in (2,3,4)
    LEFT JOIN (SELECT COUNT(a.buyer_user_id) users,a.product_id FROM (SELECT b.buyer_user_id,a.product_id FROM cere_order_product a,cere_shop_order b
    where a.order_id=b.order_id and b.state in (2,3,4) GROUP BY a.product_id,b.buyer_user_id) a GROUP BY a.product_id) x ON a.product_id=x.product_id
    LEFT JOIN cere_shop_group_work h ON a.shop_group_work_id=h.shop_group_work_id
    LEFT JOIN (SELECT a.sku_id,a.image from cere_sku_name a,cere_product_sku b where a.sku_id=b.sku_id LIMIT 1) m ON a.sku_id=m.sku_id
    LEFT JOIN cere_product_sku n ON a.sku_id=n.sku_id
    where b.shelve_state=1 and h.state=1 and d.state=1
    <if test="shopId!=null">
      and b.shop_id=#{shopId}
    </if>
    <if test="search!=null and search!=''">
      and (d.shop_name like concat('%',#{search},'%') OR
      a.product_id like concat('%',#{search},'%') OR
      b.product_name like concat('%',#{search},'%'))
    </if>
    <if test="shelveState!=null">
      and b.shelve_state=#{shelveState}
    </if>
    <if test="classifyId!=null">
      and (b.classify_id=#{classifyId} OR e.classify_level_hierarchy like concat('%/',#{classifyId},'%'))
    </if>
    <if test="ids!=null and ids.size()>0">
      and a.product_id in (
      <foreach collection="ids" item="id" index="index" separator=",">
        #{id}
      </foreach>
      )
    </if>
    GROUP BY a.product_id
    ORDER BY b.create_time DESC
  </select>

  <select id="getSeckillProducts" parameterType="com.shop.cereshop.app.param.canvas.CanvasAppProductParam" resultType="com.shop.cereshop.app.page.canvas.CanvasProduct">
    SELECT b.shop_id,d.shop_name,d.shop_logo,a.product_id,b.product_name,x.users,h.effective_start start_time,h.effective_end end_time,h.state,
    IF(m.image IS NULL OR m.image='',c.product_image,m.image) image,h.if_enable,h.enable_time,
    a.seckill_price price,a.sku_id,n.price original_price,IF(f.number IS NULL,0,f.number) number,n.stock_number FROM cere_shop_seckill_detail a
    LEFT JOIN cere_shop_product b ON a.product_id=b.product_id
    LEFT JOIN (SELECT a.product_id,a.product_image from cere_product_image a,cere_shop_product b
    where a.product_id=b.product_id GROUP BY a.product_id) c ON a.product_id=c.product_id
    LEFT JOIN cere_platform_shop d ON b.shop_id=d.shop_id
    LEFT JOIN cere_product_classify e ON b.classify_id=e.classify_id
    LEFT JOIN (SELECT SUM(number) number,sku_id,order_id from cere_order_product GROUP BY sku_id) f ON a.sku_id=f.sku_id
    LEFT JOIN cere_shop_order g ON f.order_id=g.order_id and g.state in (2,3,4)
    LEFT JOIN (SELECT COUNT(a.buyer_user_id) users,a.product_id FROM (SELECT b.buyer_user_id,a.product_id FROM cere_order_product a,cere_shop_order b
    where a.order_id=b.order_id and b.state in (2,3,4) GROUP BY a.product_id,b.buyer_user_id) a GROUP BY a.product_id) x ON a.product_id=x.product_id
    LEFT JOIN cere_shop_seckill h ON a.shop_seckill_id=h.shop_seckill_id
    LEFT JOIN (SELECT a.sku_id,a.image from cere_sku_name a,cere_product_sku b where a.sku_id=b.sku_id LIMIT 1) m ON a.sku_id=m.sku_id
    LEFT JOIN cere_product_sku n ON a.sku_id=n.sku_id
    where b.shelve_state=1 and h.state=1 and d.state=1
    <if test="shopId!=null">
      and b.shop_id=#{shopId}
    </if>
    <if test="search!=null and search!=''">
      and (d.shop_name like concat('%',#{search},'%') OR
      a.product_id like concat('%',#{search},'%') OR
      b.product_name like concat('%',#{search},'%'))
    </if>
    <if test="shelveState!=null">
      and b.shelve_state=#{shelveState}
    </if>
    <if test="classifyId!=null">
      and (b.classify_id=#{classifyId} OR e.classify_level_hierarchy like concat('%/',#{classifyId},'%'))
    </if>
    <if test="ids!=null and ids.size()>0">
      and a.product_id in (
      <foreach collection="ids" item="id" index="index" separator=",">
        #{id}
      </foreach>
      )
    </if>
    GROUP BY a.product_id
    ORDER BY b.create_time DESC
  </select>

  <select id="getDiscountProducts" parameterType="com.shop.cereshop.app.param.canvas.CanvasAppProductParam" resultType="com.shop.cereshop.app.page.canvas.CanvasProduct">
    SELECT b.shop_id,d.shop_name,d.shop_logo,a.product_id,b.product_name,x.users,h.start_time,h.end_time,h.state,
    IF(m.image IS NULL OR m.image='',c.product_image,m.image) image,h.if_enable,h.enable_time,
    a.price,a.sku_id,n.price original_price,IF(f.number IS NULL,0,f.number) number,n.stock_number FROM cere_shop_discount_detail a
    LEFT JOIN cere_shop_product b ON a.product_id=b.product_id
    LEFT JOIN (SELECT a.product_id,a.product_image from cere_product_image a,cere_shop_product b
    where a.product_id=b.product_id GROUP BY a.product_id) c ON a.product_id=c.product_id
    LEFT JOIN cere_platform_shop d ON b.shop_id=d.shop_id
    LEFT JOIN cere_product_classify e ON b.classify_id=e.classify_id
    LEFT JOIN (SELECT SUM(number) number,sku_id,order_id from cere_order_product GROUP BY sku_id) f ON a.sku_id=f.sku_id
    LEFT JOIN cere_shop_order g ON f.order_id=g.order_id and g.state in (2,3,4)
    LEFT JOIN (SELECT COUNT(a.buyer_user_id) users,a.product_id FROM (SELECT b.buyer_user_id,a.product_id FROM cere_order_product a,cere_shop_order b
    where a.order_id=b.order_id and b.state in (2,3,4) GROUP BY a.product_id,b.buyer_user_id) a GROUP BY a.product_id) x ON a.product_id=x.product_id
    LEFT JOIN cere_shop_discount h ON a.shop_discount_id=h.shop_discount_id
    LEFT JOIN (SELECT a.sku_id,a.image from cere_sku_name a,cere_product_sku b where a.sku_id=b.sku_id LIMIT 1) m ON a.sku_id=m.sku_id
    LEFT JOIN cere_product_sku n ON a.sku_id=n.sku_id
    where b.shelve_state=1 and h.state=1 and d.state=1
    <if test="shopId!=null">
      and b.shop_id=#{shopId}
    </if>
    <if test="search!=null and search!=''">
      and (d.shop_name like concat('%',#{search},'%') OR
      a.product_id like concat('%',#{search},'%') OR
      b.product_name like concat('%',#{search},'%'))
    </if>
    <if test="shelveState!=null">
      and b.shelve_state=#{shelveState}
    </if>
    <if test="classifyId!=null">
      and (b.classify_id=#{classifyId} OR e.classify_level_hierarchy like concat('%/',#{classifyId},'%'))
    </if>
    <if test="ids!=null and ids.size()>0">
      and a.product_id in (
      <foreach collection="ids" item="id" index="index" separator=",">
        #{id}
      </foreach>
      )
    </if>
    GROUP BY a.product_id
    ORDER BY b.create_time DESC
  </select>

  <select id="findAllClassify" resultType="com.shop.cereshop.commons.domain.product.Classify">
    SELECT classify_id id,classify_pid parentId,classify_name categoryName,classify_level depth,classify_image
    FROM cere_product_classify where classify_level=1
  </select>

  <select id="findChildsClassify" resultType="com.shop.cereshop.commons.domain.product.Classify">
    SELECT classify_id id,classify_pid parentId,classify_name categoryName,classify_level depth,classify_image
    FROM cere_product_classify where classify_level<![CDATA[!= ]]>1
  </select>

  <select id="findSimilarProducts" parameterType="java.lang.Object" resultType="com.shop.cereshop.app.page.index.Product">
    SELECT a.shop_id,d.shop_name,a.product_id,a.product_name,c.product_image image,
    b.price,b.sku_id,b.original_price,a.product_brief,g.users from cere_shop_product a
    LEFT JOIN (SELECT a.product_id,a.price,a.sku_id,a.original_price from cere_product_sku a,cere_shop_product b
    where a.product_id=b.product_id GROUP BY a.product_id) b ON a.product_id=b.product_id
    LEFT JOIN (SELECT a.product_id,a.product_image from cere_product_image a,cere_shop_product b
    where a.product_id=b.product_id GROUP BY a.product_id) c ON a.product_id=c.product_id
    LEFT JOIN cere_platform_shop d ON a.shop_id=d.shop_id
    LEFT JOIN (SELECT IF(SUM(number) IS NULL,0,SUM(number)) number,sku_id,order_id from cere_order_product GROUP BY sku_id) f ON b.sku_id=f.sku_id
    LEFT JOIN (SELECT COUNT(a.buyer_user_id) users,a.product_id FROM (SELECT b.buyer_user_id,a.product_id FROM cere_order_product a,cere_shop_order b
    where a.order_id=b.order_id and b.state in (2,3,4) GROUP BY a.product_id,b.buyer_user_id) a GROUP BY a.product_id) g ON a.product_id=g.product_id
    where d.state=1 and a.shelve_state=1
    <if test="classifyId!=null">
      and a.classify_id=#{classifyId}
    </if>
    ORDER BY f.number DESC LIMIT 4
  </select>

  <select id="getRandomSortProduct" resultType="com.shop.cereshop.app.page.index.Product">
    SELECT a.shop_id,
           d.shop_name,
           a.product_id,
           a.product_name,
           c.product_image image,
           b.sku_id,
           b.original_price,
           b.price,
           0 as activityType
    from cere_shop_product a
    LEFT JOIN (SELECT a.product_id,a.price,a.sku_id,a.original_price from cere_product_sku a,cere_shop_product b
        where a.product_id=b.product_id GROUP BY a.product_id) b ON a.product_id=b.product_id
    LEFT JOIN (SELECT a.product_id,a.product_image from cere_product_image a,cere_shop_product b
        where a.product_id=b.product_id GROUP BY a.product_id) c ON a.product_id=c.product_id
    LEFT JOIN cere_platform_shop d ON a.shop_id=d.shop_id
    LEFT JOIN cere_product_classify e ON a.classify_id=e.classify_id
    LEFT JOIN (SELECT SUM(number) number,sku_id,order_id from cere_order_product GROUP BY sku_id) f ON b.sku_id=f.sku_id
    where a.shelve_state=1 and d.state=1
    ORDER BY encode(a.product_id, #{timestamp}), a.update_time DESC, a.create_time DESC
  </select>

  <delete id="deleteAllSearch" parameterType="java.lang.Object">
    DELETE FROM cere_buyer_search where buyer_user_id=#{buyerUserId}
  </delete>

  <select id="findRandom4ShopProducts" resultType="com.shop.cereshop.app.page.index.Product">
    SELECT a.shop_id,d.shop_name,a.product_id,a.product_name,c.product_image image,
    b.price,b.sku_id,b.original_price,a.product_brief from cere_shop_product a
    LEFT JOIN (SELECT a.product_id,a.price,a.sku_id,a.original_price from cere_product_sku a,cere_shop_product b
    where a.product_id=b.product_id GROUP BY a.product_id) b ON a.product_id=b.product_id
    LEFT JOIN (SELECT a.product_id,a.product_image from cere_product_image a,cere_shop_product b
    where a.product_id=b.product_id GROUP BY a.product_id) c ON a.product_id=c.product_id
    LEFT JOIN cere_platform_shop d ON a.shop_id=d.shop_id
    where d.state=1 and a.shelve_state=1 and a.shop_id = #{shopId}
    ORDER BY a.update_time DESC LIMIT 4
  </select>
</mapper>
