<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.cereshop.app.dao.activity.CerePlatformActivityDAO">
  <resultMap id="BaseResultMap" type="com.shop.cereshop.commons.domain.activity.CerePlatformActivity">
    <id column="activity_id" jdbcType="BIGINT" property="activityId"/>
    <result column="activity_name" jdbcType="VARCHAR" property="activityName"/>
    <result column="activity_introduce" jdbcType="VARCHAR" property="activityIntroduce"/>
    <result column="sign_start_time" jdbcType="VARCHAR" property="signStartTime"/>
    <result column="sign_end_time" jdbcType="VARCHAR" property="signEndTime"/>
    <result column="activity_start_time" jdbcType="VARCHAR" property="activityStartTime"/>
    <result column="activity_end_time" jdbcType="VARCHAR" property="activityEndTime"/>
    <result column="if_bond" jdbcType="BIT" property="ifBond"/>
    <result column="bond_money" jdbcType="DECIMAL" property="bondMoney"/>
    <result column="threshold" jdbcType="DECIMAL" property="threshold"/>
    <result column="discount_mode" jdbcType="BIT" property="discountMode"/>
    <result column="coupon_content" jdbcType="DECIMAL" property="couponContent"/>
    <result column="number" jdbcType="INTEGER" property="number"/>
    <result column="stock_number" jdbcType="INTEGER" property="stockNumber"/>
    <result column="receive_type" jdbcType="INTEGER" property="receiveType"/>
    <result column="frequency" jdbcType="INTEGER" property="frequency"/>
    <result column="image" jdbcType="VARCHAR" property="image"/>
    <result column="state" jdbcType="BIT" property="state"/>
    <result column="create_time" jdbcType="VARCHAR" property="createTime"/>
    <result column="update_time" jdbcType="VARCHAR" property="updateTime"/>
  </resultMap>
  <sql id="Base_Column_List">
    activity_id
    , activity_name, activity_introduce, sign_start_time, sign_end_time, activity_start_time,
    activity_end_time, if_bond, bond_money,threshold, discount_mode, coupon_content,`number`,stock_number,receive_type,frequency, image,
    `state`, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from cere_platform_activity
    where activity_id = #{activityId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete
    from cere_platform_activity
    where activity_id = #{activityId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="activity_id" keyProperty="activityId"
          parameterType="com.shop.cereshop.commons.domain.activity.CerePlatformActivity" useGeneratedKeys="true">
    insert into cere_platform_activity (activity_name, activity_introduce,
                                        sign_start_time, sign_end_time, activity_start_time,
                                        activity_end_time, if_bond, bond_money,
                                        threshold, discount_mode, coupon_content, `number`,stock_number, receive_type, frequency,
                                        `state`, image, create_time, update_time)
    values (#{activityName,jdbcType=VARCHAR}, #{activityIntroduce,jdbcType=VARCHAR},
            #{signStartTime,jdbcType=VARCHAR}, #{signEndTime,jdbcType=VARCHAR},
            #{activityStartTime,jdbcType=VARCHAR},
            #{activityEndTime,jdbcType=VARCHAR}, #{ifBond,jdbcType=BIT}, #{bondMoney,jdbcType=DECIMAL},
            #{threshold,jdbcType=DECIMAL}, #{discountMode,jdbcType=BIT},
            #{couponContent,jdbcType=DECIMAL}, #{number,jdbcType=INTEGER},#{stockNumber,jdbcType=INTEGER}, #{receiveType,jdbcType=INTEGER},
            #{frequency,jdbcType=INTEGER},
            #{state,jdbcType=BIT}, #{image,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR},
            #{updateTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="activity_id" keyProperty="activityId"
          parameterType="com.shop.cereshop.commons.domain.activity.CerePlatformActivity" useGeneratedKeys="true">
    insert into cere_platform_activity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="activityName != null and activityName!=''">
        activity_name,
      </if>
      <if test="activityIntroduce != null and activityIntroduce!=''">
        activity_introduce,
      </if>
      <if test="signStartTime != null and signStartTime!=''">
        sign_start_time,
      </if>
      <if test="signEndTime != null and signEndTime!=''">
        sign_end_time,
      </if>
      <if test="activityStartTime != null and activityStartTime!=''">
        activity_start_time,
      </if>
      <if test="activityEndTime != null and activityEndTime!=''">
        activity_end_time,
      </if>
      <if test="ifBond != null">
        if_bond,
      </if>
      <if test="bondMoney != null">
        bond_money,
      </if>
      <if test="threshold != null">
        threshold,
      </if>
      <if test="discountMode != null">
        discount_mode,
      </if>
      <if test="couponContent != null">
        coupon_content,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="stockNumber != null">
        stock_number,
      </if>
      <if test="receiveType != null">
        receive_type,
      </if>
      <if test="frequency != null">
        frequency,
      </if>
      <if test="image != null and image!=''">
        image,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="createTime != null and createTime!=''">
        create_time,
      </if>
      <if test="updateTime != null and updateTime!=''">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="activityName != null and activityName!=''">
        #{activityName,jdbcType=VARCHAR},
      </if>
      <if test="activityIntroduce != null and activityIntroduce!=''">
        #{activityIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="signStartTime != null and signStartTime!=''">
        #{signStartTime,jdbcType=VARCHAR},
      </if>
      <if test="signEndTime != null and signEndTime!=''">
        #{signEndTime,jdbcType=VARCHAR},
      </if>
      <if test="activityStartTime != null and activityStartTime!=''">
        #{activityStartTime,jdbcType=VARCHAR},
      </if>
      <if test="activityEndTime != null and activityEndTime!=''">
        #{activityEndTime,jdbcType=VARCHAR},
      </if>
      <if test="ifBond != null">
        #{ifBond,jdbcType=BIT},
      </if>
      <if test="bondMoney != null">
        #{bondMoney,jdbcType=DECIMAL},
      </if>
      <if test="threshold != null">
        #{threshold,jdbcType=DECIMAL},
      </if>
      <if test="discountMode != null">
        #{discountMode,jdbcType=BIT},
      </if>
      <if test="couponContent != null">
        #{couponContent,jdbcType=DECIMAL},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="stockNumber != null">
        #{stockNumber,jdbcType=INTEGER},
      </if>
      <if test="receiveType != null">
        #{receiveType,jdbcType=INTEGER},
      </if>
      <if test="frequency != null">
        #{frequency,jdbcType=INTEGER},
      </if>
      <if test="image != null and image!=''">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=BIT},
      </if>
      <if test="createTime != null and createTime!=''">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null and updateTime!=''">
        #{updateTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective"
          parameterType="com.shop.cereshop.commons.domain.activity.CerePlatformActivity">
    update cere_platform_activity
    <set>
      <if test="activityName != null and activityName!=''">
        activity_name = #{activityName,jdbcType=VARCHAR},
      </if>
      <if test="activityIntroduce != null and activityIntroduce!=''">
        activity_introduce = #{activityIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="signStartTime != null and signStartTime!=''">
        sign_start_time = #{signStartTime,jdbcType=VARCHAR},
      </if>
      <if test="signEndTime != null and signEndTime!=''">
        sign_end_time = #{signEndTime,jdbcType=VARCHAR},
      </if>
      <if test="activityStartTime != null and activityStartTime!=''">
        activity_start_time = #{activityStartTime,jdbcType=VARCHAR},
      </if>
      <if test="activityEndTime != null and activityEndTime!=''">
        activity_end_time = #{activityEndTime,jdbcType=VARCHAR},
      </if>
      <if test="ifBond != null">
        if_bond = #{ifBond,jdbcType=BIT},
      </if>
      <if test="bondMoney != null">
        bond_money = #{bondMoney,jdbcType=DECIMAL},
      </if>
      <if test="threshold != null">
        threshold = #{threshold,jdbcType=DECIMAL},
      </if>
      <if test="discountMode != null">
        discount_mode = #{discountMode,jdbcType=BIT},
      </if>
      <if test="couponContent != null">
        coupon_content = #{couponContent,jdbcType=DECIMAL},
      </if>
      <if test="number != null">
        `number` = #{number,jdbcType=INTEGER},
      </if>
      <if test="stockNumber != null">
        stock_number = #{stockNumber,jdbcType=INTEGER},
      </if>
      <if test="receiveType != null">
        receive_type = #{receiveType,jdbcType=INTEGER},
      </if>
      <if test="frequency != null">
        frequency = #{frequency,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=BIT},
      </if>
      <if test="image != null and image!=''">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null and createTime!=''">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null and updateTime!=''">
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    where activity_id = #{activityId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shop.cereshop.commons.domain.activity.CerePlatformActivity">
    update cere_platform_activity
    set activity_name       = #{activityName,jdbcType=VARCHAR},
        activity_introduce  = #{activityIntroduce,jdbcType=VARCHAR},
        sign_start_time     = #{signStartTime,jdbcType=VARCHAR},
        sign_end_time       = #{signEndTime,jdbcType=VARCHAR},
        activity_start_time = #{activityStartTime,jdbcType=VARCHAR},
        activity_end_time   = #{activityEndTime,jdbcType=VARCHAR},
        if_bond             = #{ifBond,jdbcType=BIT},
        bond_money          = #{bondMoney,jdbcType=DECIMAL},
        threshold           = #{threshold,jdbcType=DECIMAL},
        discount_mode       = #{discountMode,jdbcType=BIT},
        coupon_content      = #{couponContent,jdbcType=DECIMAL},
        `number`            = #{number,jdbcType=INTEGER},
        stock_number        = #{stockNumber,jdbcType=INTEGER},
        receive_type        = #{receiveType,jdbcType=INTEGER},
        frequency           = #{frequency,jdbcType=INTEGER},
        image               = #{image,jdbcType=VARCHAR},
        `state`             = #{state,jdbcType=BIT},
        create_time         = #{createTime,jdbcType=VARCHAR},
        update_time         = #{updateTime,jdbcType=VARCHAR}
    where activity_id = #{activityId,jdbcType=BIGINT}
  </update>

  <select id="getCoupons" parameterType="com.shop.cereshop.app.param.canvas.CanvasCouponParam" resultType="com.shop.cereshop.app.page.canvas.CanvasCoupon">
    SELECT activity_id coupon_id,activity_id,activity_name,activity_start_time,activity_end_time,
    discount_mode, threshold full_money,coupon_content reduce_money,3 as state
    FROM cere_platform_activity
    where state in (3) and activity_start_time&lt;=NOW()
    and activity_end_time&gt;=NOW()
    <if test="search!=null and search!=''">
      and activity_name like concat('%',#{search},'%')
    </if>
    <if test="ids!=null and ids.size()>0">
      and activity_id in (
      <foreach collection="ids" item="id" index="index" separator=",">
        #{id}
      </foreach>
      )
    </if>
  </select>

  <select id="getUserCoupons" parameterType="com.shop.cereshop.app.param.canvas.CanvasCouponParam" resultType="com.shop.cereshop.app.page.canvas.CanvasCoupon">
    SELECT a.activity_id coupon_id,a.activity_id,a.activity_name,a.activity_start_time,a.activity_end_time,
    a.discount_mode,a.threshold full_money,a.coupon_content reduce_money,IF(b.coupon_id IS NULL,3,b.state) state
    FROM cere_platform_activity a
    LEFT JOIN cere_buyer_coupon b ON a.activity_id=b.coupon_id and b.buyer_user_id=#{buyerUserId}
    where a.state in (3) and a.activity_start_time&lt;=NOW()
    and a.activity_end_time&gt;=NOW()
    <if test="search!=null and search!=''">
      and a.activity_name like concat('%',#{search},'%')
    </if>
    <if test="ids!=null and ids.size()>0">
      and a.activity_id in (
      <foreach collection="ids" item="id" index="index" separator=",">
        #{id}
      </foreach>
      )
    </if>
  </select>

  <select id="findDetai" parameterType="java.lang.Object" resultType="com.shop.cereshop.app.page.canvas.CanvasCouponDetail">
    SELECT activity_id coupon_id,threshold full_money,coupon_content reduce_money FROM cere_platform_activity WHERE activity_id=#{activityId}
  </select>

  <select id="findCouponByProductId" parameterType="java.lang.Object" resultType="com.shop.cereshop.app.page.product.ProductCoupon">
    SELECT a.activity_id coupon_id,a.activity_id,a.activity_name,a.activity_start_time startTime,a.activity_end_time endTime,a.image,a.discount_mode couponType,
    a.threshold full_money,a.coupon_content reduce_money,b.shop_id,a.discount_mode,IF(d.state IS NULL,3,d.state) state from cere_platform_activity a
    LEFT JOIN cere_activity_sign b ON a.activity_id=b.activity_id
    LEFT JOIN cere_sign_product c ON b.sign_id=c.sign_id
    LEFT JOIN cere_buyer_coupon d ON a.activity_id=d.coupon_id
    where b.state=1 and a.state=3 and a.activity_start_time&lt;=NOW()
    and a.activity_end_time&gt;=NOW() and c.product_id=#{productId}
    GROUP BY a.activity_id
    ORDER BY CASE a.threshold when 0 THEN 1 END,a.threshold DESC
  </select>

  <select id="findCouponByProductIdAndUserId" parameterType="java.lang.Object" resultType="com.shop.cereshop.app.page.product.ProductCoupon">
    SELECT a.activity_id coupon_id,a.activity_id,a.activity_name,a.activity_start_time startTime,a.activity_end_time endTime,a.image,a.stock_number,a.discount_mode couponType,
    a.threshold full_money,a.coupon_content reduce_money,b.shop_id,a.discount_mode,IF(d.state IS NULL,3,d.state) state,e.count from cere_platform_activity a
    LEFT JOIN cere_activity_sign b ON a.activity_id=b.activity_id
    LEFT JOIN cere_sign_product c ON b.sign_id=c.sign_id
    LEFT JOIN cere_buyer_coupon d ON a.activity_id=d.coupon_id and d.buyer_user_id=#{buyerUserId}
    LEFT JOIN (SELECT COUNT(buyer_user_id) count,coupon_id FROM cere_buyer_coupon where buyer_user_id=#{buyerUserId} GROUP BY coupon_id) e ON a.activity_id=e.coupon_id
    where b.state=1 and a.state=3 and a.activity_start_time&lt;=NOW()
    and a.activity_end_time&gt;=NOW() and c.product_id=#{productId}
    GROUP BY a.activity_id
    ORDER BY CASE a.threshold when 0 THEN 1 END,a.threshold DESC
  </select>

  <select id="findOnGoingCouponByBatchId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from cere_platform_activity
    where activity_id in
      <foreach collection="list" item="couponId" open="(" separator="," close=")">
        #{couponId}
      </foreach>
      and state = 3
      and stock_number > 0
  </select>

  <select id="getGroupWorkProducts" resultType="com.shop.cereshop.app.page.tool.ToolProduct">
    SELECT b.product_id,
    b.product_name,
    c.original_price,
    d.product_image image,
    c.stock_number,
    a.price,
    a.sku_id,
    c.total,
    b.shop_id,
    c.original_price,
    SUM(f.number) number
    from cere_shop_group_work_detail a
    LEFT JOIN cere_shop_product b ON a.product_id = b.product_id
    LEFT JOIN cere_product_sku c ON a.sku_id = c.sku_id
    LEFT JOIN (SELECT a.product_id, a.product_image
    from cere_product_image a,
    cere_shop_product b
    where a.product_id = b.product_id
    GROUP BY a.product_id) d
    ON b.product_id = d.product_id
    LEFT JOIN cere_shop_group_work e ON a.shop_group_work_id=e.shop_group_work_id
    LEFT JOIN cere_order_product f ON a.product_id=f.product_id
    LEFT JOIN cere_collage_order_detail h ON f.order_id=h.order_id
    LEFT JOIN cere_collage_order g ON h.collage_id=g.collage_id and g.state=1
    where e.state=1
    <if test="ids!=null and ids.size()>0">
      and a.shop_group_work_id in (
      <foreach collection="ids" item="id" index="index" separator=",">
        #{id}
      </foreach>
      )
    </if>
    GROUP BY f.product_id
    ORDER BY SUM(f.number) DESC
    LIMIT 20
  </select>
</mapper>
